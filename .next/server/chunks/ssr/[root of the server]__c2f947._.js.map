{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects%20Code/meekolony-nft-monitoring/src/pages/_app.js"],"sourcesContent":["import React from 'react';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport '../styles/globals.css';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Component {...pageProps} />\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default MyApp;"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;;;AAGA,MAAM,cAAc,IAAI,4HAAA,CAAA,cAAW;AAEnC,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,qBACE,uIAAC,4HAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAC3B,cAAA,uIAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects%20Code/meekolony-nft-monitoring/src/utils/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL;\r\nconst SYMBOL = \"meekolony\";\r\n\r\ninterface NFT {\r\nmintAddress: string;\r\n  name: string;\r\n  image: string;\r\n}\r\n\r\ninterface StatsResponse {\r\n  floorPrice: number;\r\n}\r\n\r\ninterface Listing {\r\n  token: {\r\n    mintAddress: string;\r\n    name: string;\r\n    image: string;\r\n  };\r\n  price: number;\r\n}\r\n\r\ninterface Activity {\r\n  type: string;\r\n  price: number;\r\n  buyer?: string;\r\n  seller?: string;\r\n  signature: string;\r\n  blockTime: number;\r\n}\r\n\r\ninterface HolderStatsResponse {\r\n  uniqueHolders: number;\r\n}\r\n\r\nexport const fetchStats = (): Promise<AxiosResponse<StatsResponse>> => axios.get(`${API_BASE_URL}/collections/${SYMBOL}/stats`);\r\nexport const fetchListings = (): Promise<AxiosResponse<Listing[]>> => axios.get(`${API_BASE_URL}/collections/${SYMBOL}/listings`);\r\nexport const fetchActivites = (): Promise<AxiosResponse<Activity[]>> => axios.get(`${API_BASE_URL}/collections/${SYMBOL}/activities`);\r\nexport const fetchWalletNFTs = (walletAddress: string): Promise<AxiosResponse<NFT[]>> => axios.get(`${API_BASE_URL}/wallets/${walletAddress}/tokens`);\r\nexport const fetchHolderStats = (): Promise<AxiosResponse<HolderStatsResponse>> => axios.get(`${API_BASE_URL}/collections/${SYMBOL}/holder_stats`);\r\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;;AAEA,MAAM;AACN,MAAM,SAAS;AAkCR,MAAM,aAAa,IAA6C,qGAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,aAAa,aAAa,EAAE,OAAO,MAAM,CAAC;AACvH,MAAM,gBAAgB,IAAyC,qGAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,aAAa,aAAa,EAAE,OAAO,SAAS,CAAC;AACzH,MAAM,iBAAiB,IAA0C,qGAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,aAAa,aAAa,EAAE,OAAO,WAAW,CAAC;AAC7H,MAAM,kBAAkB,CAAC,gBAAyD,qGAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,aAAa,SAAS,EAAE,cAAc,OAAO,CAAC;AAC7I,MAAM,mBAAmB,IAAmD,qGAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,aAAa,aAAa,EAAE,OAAO,aAAa,CAAC"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects%20Code/meekolony-nft-monitoring/src/components/Navbar.js"],"sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"bg-gray-800 p-4\">\r\n    <div className=\"container mx-auto flex justify-between items-center\">\r\n      <h1 className=\"text-white text-xl font-bold\">Meekolony NFT Monitor</h1>\r\n      <ul className=\"flex space-x-4\">\r\n        <li>\r\n          <Link href=\"/collection\" className=\"text-white hover:underline\">\r\n            Collection\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link href=\"/holder\" className=\"text-white hover:underline\">\r\n            Holder\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,SAAS,kBACb,uIAAC;QAAI,WAAU;kBACb,cAAA,uIAAC;YAAI,WAAU;;8BACb,uIAAC;oBAAG,WAAU;8BAA+B;;;;;;8BAC7C,uIAAC;oBAAG,WAAU;;sCACZ,uIAAC;sCACC,cAAA,uIAAC,qHAAA,CAAA,UAAI;gCAAC,MAAK;gCAAc,WAAU;0CAA6B;;;;;;;;;;;sCAIlE,uIAAC;sCACC,cAAA,uIAAC,qHAAA,CAAA,UAAI;gCAAC,MAAK;gCAAU,WAAU;0CAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCASvD"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects%20Code/meekolony-nft-monitoring/src/pages/collection.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { fetchStats, fetchListings, fetchActivites, fetchHolderStats } from '../utils/api';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst CollectionPage = () => {\r\n  const { data: stats, refetch: refetchStats } = useQuery({\r\n    queryKey: ['stats'],\r\n    queryFn: fetchStats,\r\n  });\r\n\r\n  const { data: listings, refetch: refetchListings } = useQuery({\r\n    queryKey: ['listings'],\r\n    queryFn: fetchListings,\r\n  });\r\n\r\n  const { data: activities, refetch: refetchActivities } = useQuery({\r\n    queryKey: ['activities'],\r\n    queryFn: fetchActivites,\r\n  });\r\n\r\n  const { data: holderStats, refetch: refetchHolderStats } = useQuery({\r\n    queryKey: ['holderStats'],\r\n    queryFn: fetchHolderStats,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      refetchStats();\r\n      refetchListings();\r\n      refetchActivities();\r\n      refetchHolderStats();\r\n    }, 300000); // 300000 ms = 5 minutes\r\n\r\n    return () => clearInterval(interval);\r\n  }, [refetchStats, refetchListings, refetchActivities, refetchHolderStats]);\r\n\r\n  if (!stats || !listings || !activities || !holderStats) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container mx-auto p-6\">\r\n        {/* Collection Header */}\r\n        <div className=\"bg-gradient-to-r from-blue-500 to-indigo-500 text-white rounded-lg p-6 shadow-md\">\r\n          <h1 className=\"text-4xl font-bold mb-2\">Tatsumeeko: Meekolony Pass</h1>\r\n          <p className=\"text-lg\">\r\n            Floor Price: <span className=\"font-semibold\">{stats.data.floorPrice / 1_000_000_000} SOL</span>\r\n          </p>\r\n          <p className=\"text-lg\">\r\n            Unique Holders: <span className=\"font-semibold\">{holderStats.data.uniqueHolders}</span>\r\n          </p>\r\n        </div>\r\n\r\n        {/* Recent Listings */}\r\n        <section className=\"mt-8\">\r\n          <h2 className=\"text-2xl font-semibold mb-4\">Recent Listings</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-6 gap-4\">\r\n            {listings.data.map((listing) => (\r\n              <div key={listing.token.mintAddress} className=\"bg-white border rounded-lg shadow-md p-4\">\r\n                <div className=\"relative w-full h-48\">\r\n                  <img\r\n                    src={listing.token.image}\r\n                    alt={listing.token.name}\r\n                    className=\"rounded-md w-full h-full object-cover\"\r\n                  />\r\n                </div>\r\n                <h3 className=\"text-lg font-bold mt-2\">{listing.token.name}</h3>\r\n                <p className=\"text-gray-600\">Price: {listing.price} SOL</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n\r\n        {/* Recent Sales */}\r\n        <section className=\"mt-8\">\r\n          <h2 className=\"text-2xl font-semibold mb-4\">Recent Sales</h2>\r\n          <div className=\"bg-white p-4 rounded-lg shadow-md\">\r\n            {activities.data.map((sale, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"border-b py-4 last:border-b-0 grid grid-cols-1 md:grid-cols-3 gap-4\"\r\n              >\r\n                <div>\r\n                  <p>\r\n                    <strong>Transaction Type:</strong> {sale.type}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Price:</strong> {sale.price} SOL\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>\r\n                    <strong>Buyer:</strong> <span className=\"break-words\">{sale.buyer || 'N/A'}</span>\r\n                  </p>\r\n                  <p>\r\n                    <strong>Seller:</strong> <span className=\"break-words\">{sale.seller || 'N/A'}</span>\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>\r\n                    <strong>Signature:</strong>{' '}\r\n                    <a\r\n                      href={`https://explorer.solana.com/tx/${sale.signature}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"text-blue-500 hover:underline break-words\"\r\n                    >\r\n                      {sale.signature}\r\n                    </a>\r\n                  </p>\r\n                  <p>\r\n                    <strong>Block Time:</strong>{' '}\r\n                    {new Date(sale.blockTime * 1000).toLocaleString()}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollectionPage;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM,EAAE,MAAM,KAAK,EAAE,SAAS,YAAY,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD,EAAE;QACtD,UAAU;YAAC;SAAQ;QACnB,SAAS,4GAAA,CAAA,aAAU;IACrB;IAEA,MAAM,EAAE,MAAM,QAAQ,EAAE,SAAS,eAAe,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD,EAAE;QAC5D,UAAU;YAAC;SAAW;QACtB,SAAS,4GAAA,CAAA,gBAAa;IACxB;IAEA,MAAM,EAAE,MAAM,UAAU,EAAE,SAAS,iBAAiB,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD,EAAE;QAChE,UAAU;YAAC;SAAa;QACxB,SAAS,4GAAA,CAAA,iBAAc;IACzB;IAEA,MAAM,EAAE,MAAM,WAAW,EAAE,SAAS,kBAAkB,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD,EAAE;QAClE,UAAU;YAAC;SAAc;QACzB,SAAS,4GAAA,CAAA,mBAAgB;IAC3B;IAEA,CAAA,GAAA,8FAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,YAAY;YAC3B;YACA;YACA;YACA;QACF,GAAG,SAAS,wBAAwB;QAEpC,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;QAAc;QAAiB;QAAmB;KAAmB;IAEzE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,CAAC,aAAa,qBAAO,uIAAC;kBAAE;;;;;;IAElE,qBACE;;0BACE,uIAAC,oHAAA,CAAA,UAAM;;;;;0BACP,uIAAC;gBAAI,WAAU;;kCAEb,uIAAC;wBAAI,WAAU;;0CACb,uIAAC;gCAAG,WAAU;0CAA0B;;;;;;0CACxC,uIAAC;gCAAE,WAAU;;oCAAU;kDACR,uIAAC;wCAAK,WAAU;;4CAAiB,MAAM,IAAI,CAAC,UAAU,GAAG;4CAAc;;;;;;;;;;;;;0CAEtF,uIAAC;gCAAE,WAAU;;oCAAU;kDACL,uIAAC;wCAAK,WAAU;kDAAiB,YAAY,IAAI,CAAC,aAAa;;;;;;;;;;;;;;;;;;kCAKnF,uIAAC;wBAAQ,WAAU;;0CACjB,uIAAC;gCAAG,WAAU;0CAA8B;;;;;;0CAC5C,uIAAC;gCAAI,WAAU;0CACZ,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC,wBAClB,uIAAC;wCAAoC,WAAU;;0DAC7C,uIAAC;gDAAI,WAAU;0DACb,cAAA,uIAAC;oDACC,KAAK,QAAQ,KAAK,CAAC,KAAK;oDACxB,KAAK,QAAQ,KAAK,CAAC,IAAI;oDACvB,WAAU;;;;;;;;;;;0DAGd,uIAAC;gDAAG,WAAU;0DAA0B,QAAQ,KAAK,CAAC,IAAI;;;;;;0DAC1D,uIAAC;gDAAE,WAAU;;oDAAgB;oDAAQ,QAAQ,KAAK;oDAAC;;;;;;;;uCAT3C,QAAQ,KAAK,CAAC,WAAW;;;;;;;;;;;;;;;;kCAgBzC,uIAAC;wBAAQ,WAAU;;0CACjB,uIAAC;gCAAG,WAAU;0CAA8B;;;;;;0CAC5C,uIAAC;gCAAI,WAAU;0CACZ,WAAW,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,sBAC1B,uIAAC;wCAEC,WAAU;;0DAEV,uIAAC;;kEACC,uIAAC;;0EACC,uIAAC;0EAAO;;;;;;4DAA0B;4DAAE,KAAK,IAAI;;;;;;;kEAE/C,uIAAC;;0EACC,uIAAC;0EAAO;;;;;;4DAAe;4DAAE,KAAK,KAAK;4DAAC;;;;;;;;;;;;;0DAGxC,uIAAC;;kEACC,uIAAC;;0EACC,uIAAC;0EAAO;;;;;;4DAAe;0EAAC,uIAAC;gEAAK,WAAU;0EAAe,KAAK,KAAK,IAAI;;;;;;;;;;;;kEAEvE,uIAAC;;0EACC,uIAAC;0EAAO;;;;;;4DAAgB;0EAAC,uIAAC;gEAAK,WAAU;0EAAe,KAAK,MAAM,IAAI;;;;;;;;;;;;;;;;;;0DAG3E,uIAAC;;kEACC,uIAAC;;0EACC,uIAAC;0EAAO;;;;;;4DAAoB;0EAC5B,uIAAC;gEACC,MAAM,CAAC,+BAA+B,EAAE,KAAK,SAAS,EAAE;gEACxD,QAAO;gEACP,KAAI;gEACJ,WAAU;0EAET,KAAK,SAAS;;;;;;;;;;;;kEAGnB,uIAAC;;0EACC,uIAAC;0EAAO;;;;;;4DAAqB;4DAC5B,IAAI,KAAK,KAAK,SAAS,GAAG,MAAM,cAAc;;;;;;;;;;;;;;uCAjC9C;;;;;;;;;;;;;;;;;;;;;;;;AA2CrB;uCAEe"}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}